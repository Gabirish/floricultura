@model FloriculturaBeta.Models.Venda

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Venda</h4>

        @if (ViewBag.erro != null)
        {<h3 class="alert-danger"> @ViewBag.erro </h3>}

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FuncionarioId, "Funcionário", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FuncionarioId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FuncionarioId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClienteId, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <table class="table">
            <tr>
                <th>
                    Produto
                </th>
                <th>
                    Valor
                </th>
                <th>
                    Unidades Disponiveis
                </th>
                <th>
                    Unidades
                </th>
            </tr>

            @for (int i = 0; i < Model.Produtos.Count; i++)
            {

                <tr>

                    <td>
                        @Html.HiddenFor(model => model.Produtos[i].ProdutoId)
                        @Html.HiddenFor(model => model.Produtos[i].ProdutoDescricao)
                        @Html.DisplayFor(model => model.Produtos[i].ProdutoNome)@Html.HiddenFor(model => model.Produtos[i].ProdutoNome)
                    </td>
                    <td>
                        @Html.DisplayFor(p => p.Produtos[i].ProdutoValor, new { @class = "form-control", Value = Model.Produtos[i].ProdutoValor }) @Html.HiddenFor(model => model.Produtos[i].ProdutoValor)
                    </td>
                    <td>
                        @Html.DisplayFor(p => p.Produtos[i].ProdutoEstoque, new { @class = "form-control", Value = Model.Produtos[i].ProdutoEstoque })@Html.HiddenFor(model => model.Produtos[i].ProdutoEstoque)
                    </td>
                    <td>
                        @if (Model.Produtos[i].ProdutoEstoque < 1)
                        {
                            @Html.TextBoxFor(p => p.Produtos[i].QuantidadeVenda, new { value = 0, disabled = "disabled" })
                        }
                        else
                        {
                            @Html.TextBoxFor(p => p.Produtos[i].QuantidadeVenda, new { value = 0, @id = "quantidade" })
                            if (Model.Produtos[i].ProdutoEstoque < Model.Produtos[i].QuantidadeVenda)
                            {<p>valor invalido</p>}
                        }
                    </td>
                </tr>

            }
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

